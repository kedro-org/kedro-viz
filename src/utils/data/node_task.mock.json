{
  "code": "def split_data(data: pd.DataFrame, example_test_data_ratio: float) -> Dict[str, Any]:\n    \"\"\"Node for splitting the classical Iris data set into training and test\n    sets, each split into features and labels.\n    The split ratio parameter is taken from conf/project/parameters.yml.\n    The data and the parameters will be loaded and provided to your function\n    automatically when the pipeline is executed and it is time to run this node.\n    \"\"\"\n    data.columns = [\n        \"sepal_length\",\n        \"sepal_width\",\n        \"petal_length\",\n        \"petal_width\",\n        \"target\",\n    ]\n    classes = sorted(data[\"target\"].unique())\n    # One-hot encoding for the target variable\n    data = pd.get_dummies(data, columns=[\"target\"], prefix=\"\", prefix_sep=\"\")\n\n    # Shuffle all the data\n    data = data.sample(frac=1).reset_index(drop=True)\n\n    # Split to training and testing data\n    n = data.shape[0]\n    n_test = int(n * example_test_data_ratio)\n    training_data = data.iloc[n_test:, :].reset_index(drop=True)\n    test_data = data.iloc[:n_test, :].reset_index(drop=True)\n\n    # Split the data to features and labels\n    train_data_x = training_data.loc[:, \"sepal_length\":\"petal_width\"]\n    train_data_y = training_data[classes]\n    test_data_x = test_data.loc[:, \"sepal_length\":\"petal_width\"]\n    test_data_y = test_data[classes]\n\n    # When returning many variables, it is a good practice to give them names:\n    return dict(\n        train_x=train_data_x,\n        train_y=train_data_y,\n        test_x=test_data_x,\n        test_y=test_data_y,\n    )\n",
  "filepath": "test/src/test/pipelines/data_engineering/nodes.py",
  "docstring": "Node for splitting the classical Iris data set into training and test\nsets, each split into features and labels.\nThe split ratio parameter is taken from conf/project/parameters.yml.\nThe data and the parameters will be loaded and provided to your function\nautomatically when the pipeline is executed and it is time to run this node."
}
