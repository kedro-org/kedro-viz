@use '../../../styles/mixins' as mixins;
@use '../../../styles/variables' as colors;
@use './panels';
@use './variables';

.kui-theme--light {
  --color-nodelist-row-active: #{variables.$row-active-light};
  --color-nodelist-row-selected: #{variables.$row-selected-light};
  --color-nodelist-filter-indicator-on: #{variables.$filter-indicator-on-light};
  --color-nodelist-filter-indicator-off: #{variables.$filter-indicator-off-light};
  --color-nodelist-highlight: #{colors.$blue-300};
  --color-nodelist-split-handle: #{colors.$black-700};
  --color-nodelist-split-handle-border: #{colors.$grey-100};
  --color-nodelist-filter-panel: #{colors.$white-200};
  --color-nodelist-element-panel: #{colors.$white-200};
}

.kui-theme--dark {
  --color-nodelist-row-active: #{variables.$row-active-dark};
  --color-nodelist-row-selected: #{variables.$row-selected-dark};
  --color-nodelist-filter-indicator-on: #{variables.$filter-indicator-on-dark};
  --color-nodelist-filter-indicator-off: #{variables.$filter-indicator-off-dark};
  --color-nodelist-highlight: #{colors.$blue-300};
  --color-nodelist-split-handle: #{colors.$white-0};
  --color-nodelist-split-handle-border: #{colors.$grey-900};
  --color-nodelist-filter-panel: #{colors.$slate-300};
  --color-nodelist-element-panel: #{colors.$slate-700};
}

@include mixins.transparentColour(
  '--color-nodelist-bg-transparent',
  colors.$white-200,
  colors.$slate-700
);
@include mixins.transparentColour(
  '--color-nodelist-bg-filter-transparent',
  colors.$white-0,
  colors.$slate-500
);

.pipeline-nodelist {
  position: relative;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  padding-top: 1.8em;

  &::before,
  > * {
    // Transition opacity instead of background-color for GPU acceleration
    transition: opacity ease 0.2s;
  }

  &::before {
    position: absolute;
    inset: 0;
    background: var(--color-bg-2);
    opacity: 0;
    content: '';
  }

  &--fade {
    > * {
      opacity: 0.2;
    }

    &::before {
      opacity: 1;
    }
  }
}

// material-ui applies a padding on the left by default -
// this is to eliminate the unneccessary padding
.MuiTreeItem-label {
  .kui-theme--dark &,
  .kui-theme--light & {
    padding-left: 0 !important;
  }
}

// Root class for overwriting styles of the pipeline tree item
.pipeline-treeItem__root--overwrite {
  position: relative;

  .Mui-selected {
    background-color: transparent !important; // Override default background color
  }

  .MuiTreeItem-content {
    padding: 0; // Remove padding
  }

  // When hovering over the tree item content
  .MuiTreeItem-content:hover {
    background-color: var(--color-nodelist-row-active) !important;

    &::before {
      position: absolute;
      top: 0;
      bottom: 0;
      left: -100px;
      width: 100px;
      background: var(--color-nodelist-row-active);
      transform: translate(0, 0);
      opacity: 1;
      content: ' ';
      pointer-events: none;
    }

    // If it represents the modular pipeline node, change the color of the sibling .MuiTreeItem-group
    ~ .MuiTreeItem-group {
      background-color: var(--color-nodelist-row-active);
      position: relative;

      // Ensure all .row__type-icon path elements have opacity 1
      .node-list-row__type-icon path {
        opacity: 1;
      }

      // Apply the after-shadow mixin to ensure the background covers the full width on hover
      &::after {
        content: '';
        position: absolute;
        left: -40px;
        top: 0;
        height: 100%; // Match the height of the parent
        width: 50px;
        background-color: var(--color-nodelist-row-active);
      }
    }
  }
}

// disable mouse events for the overwrite disabled class
.pipeline-treeItem__root--overwrite--disabled {
  pointer-events: none;
}

.pipeline-nodelist__elements-panel .MuiTreeItem-label {
  // Handle MuiTreeItem icon offset for correct width
  $icon-offset: 15px + 4px;

  width: calc(100% - #{$icon-offset});
}
