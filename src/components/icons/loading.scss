@import '../../styles/variables';

$polygon-length: 500;
$section-length: $polygon-length / 8;
$section-gap: $section-length / 8;
$section-gap-2x: $section-gap * 2;
$start-point: $polygon-length / 2 - $section-gap-2x;
$spin1-offset-start: $start-point -$section-gap;
$spin1-offset-end: $start-point -$polygon-length - $section-gap;
$spin2-offset-start: $start-point -$section-length - $section-gap-2x;
$spin2-offset-end: $start-point -$polygon-length + -$section-length - $section-gap-2x;
$path1-length: $section-length;
$path1-gap: $polygon-length - $section-length;
$path2-length: $polygon-length - $section-length;
$path2-gap: $section-length;

.pipeline-loading-icon {
  display: block;
  width: 40px;
  height: 40px;
  opacity: 0;
  pointer-events: none;

  &--visible {
    opacity: 1;
  }

  path {
    fill: none;
    stroke-width: 8px;
  }

  path:nth-of-type(1) {
    animation: stroke-spin1 2s infinite linear;
    stroke: $color-light;
    stroke-dasharray: $path1-length, $path1-gap;
  }

  path:nth-of-type(2) {
    animation: stroke-spin2 2s infinite linear;
    stroke-dasharray: $path2-length, $path2-gap;
    stroke: $color-accent-yellow;
  }
}

@keyframes stroke-spin1 {
  from {
    stroke-dashoffset: $spin1-offset-start;
  }

  to {
    stroke-dashoffset: $spin1-offset-end;
  }
}

@keyframes stroke-spin2 {
  from {
    stroke-dashoffset: $spin2-offset-start;
  }

  to {
    stroke-dashoffset: $spin2-offset-end;
  }
}
