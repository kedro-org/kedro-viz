@use '../../styles/variables' as var;
@use '../node-list/styles/variables';

.MuiTreeItem-iconContainer svg {
  z-index: var.$zindex-MuiTreeItem-icon;
}

.row {
  position: relative;
  display: flex;
  align-items: center;
  height: 32px; // Fixed row height required for lazy list, apply any changes to row.js.
  transform: translate(0, 0);
  background-color: initial;
  cursor: default;

  &--overwrite {
    .Mui-selected & {
      .kui-theme--dark & {
        background-color: var.$slate-200;
      }

      .kui-theme--light & {
        background-color: var.$white-0;
      }
    }
  }

  &--active,
  &--visible:hover {
    background-color: var(--color-nodelist-row-active);
  }

  &--selected,
  &--visible#{&}--selected {
    // Additional selector required to increase specificity to override previous rule
    background-color: var(--color-nodelist-row-selected);
    border-right: 1px solid var.$blue-300;
  }

  &--disabled {
    pointer-events: none;
  }

  &::before {
    position: absolute;
    top: 0;
    bottom: 0;
    left: -100px;
    width: 100px;
    background: var(--color-nodelist-row-selected);
    transform: translate(0, 0);
    opacity: 0;
    content: ' ';
    pointer-events: none;
  }
}

.row--active::before,
.row--selected::before,
.row:hover::before {
  opacity: 1;
}

.row--overwrite::before {
  .Mui-selected & {
    opacity: 1;
  }
}

.row__icon {
  display: block;
  flex-shrink: 0;
  width: variables.$row-icon-size;
  height: variables.$row-icon-size;
  fill: var(--color-text);

  &.row__toggle-icon--focus-checked {
    fill: var.$blue-300;
  }

  &--disabled > * {
    opacity: 0.1;
  }
}

.row__type-icon {
  &--nested > * {
    opacity: 0.3;
  }

  &--faded > * {
    opacity: 0.2;
  }

  &--active,
  &--selected,
  .row--visible:hover &,
  [data-whatintent='keyboard'] .row__text:focus & {
    > * {
      opacity: 1;
    }

    &--faded > * {
      opacity: 0.55;
    }
  }
}

.pipeline-nodelist__elements-panel .MuiTreeItem-label {
  // Handle MuiTreeItem icon offset for correct width
  $icon-offset: 15px + 4px;

  width: calc(100% - #{$icon-offset});
}

.row__text {
  display: flex;
  align-items: center;

  // Fixed with required for overflow elipsis
  width: calc(100% - 7em);
  margin-right: auto;
  padding: variables.$row-padding-y 0 variables.$row-padding-y 0;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: 1.6;
  letter-spacing: inherit;
  text-align: inherit;
  background: none;
  border: none;
  border-radius: 0;
  box-shadow: none;
  cursor: default;
  user-select: none;

  &--tree {
    padding: variables.$row-padding-y 0 variables.$row-padding-y 1em;
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 4px var.$blue-300 inset;

    [data-whatintent='mouse'] & {
      box-shadow: none;
    }
  }
}

.row__label {
  overflow: hidden;
  font-size: 1.4em;
  white-space: nowrap;
  text-overflow: ellipsis;

  &--faded {
    opacity: 0.65;
  }

  &--disabled {
    opacity: 0.3 !important;
  }

  b {
    color: var(--color-nodelist-highlight);
    font-weight: normal;
  }
}
