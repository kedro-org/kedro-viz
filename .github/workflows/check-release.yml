name: Check version and prepare release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.9'

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    
    - name: Check package version
      run: python tools/github_actions/check_version.py

    - name: Set outputs
      id: version_check
      run: |
        echo "new_release=${{ env.NEW_RELEASE }}" >> $GITHUB_OUTPUT
        echo "package_name=${{ env.PACKAGE_NAME }}" >> $GITHUB_OUTPUT
        echo "package_version=${{ env.PACKAGE_VERSION }}" >> $GITHUB_OUTPUT
    
    outputs:
      new_release: ${{ steps.version_check.outputs.new_release }}
      package_name: ${{ steps.version_check.outputs.package_name }}
      package_version: ${{ steps.version_check.outputs.package_version }}

  test-kedro-viz:
    needs: check-version
    if: ${{ needs.check-version.outputs.new_release == 'true' }}
    uses: ./.github/workflows/all-checks.yml      

  prepare-release:
    needs: [check-version, test-kedro-viz]
    if: |
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled') &&
      needs.check-version.outputs.new_release == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Extract release notes from ${{needs.check-version.outputs.package_name}}/RELEASE.md
      id: extract
      run: |
        python tools/github_actions/extract_release_notes.py \
        "RELEASE.md" \
        "Release ${{needs.check-version.outputs.package_version}}"
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{needs.check-version.outputs.package_version}}
        name: v${{needs.check-version.outputs.package_version}}
        body_path: release_body.txt
        draft: false
        prerelease: false
        token: ${{ secrets.GH_TAGGING_TOKEN }}
