name: Run e2e tests on Kedro-Viz
# Runs end-to-end tests on Kedro-Viz for different 
# operating systems and Python versions.

on:
  workflow_call:
    inputs:
      os:
        type: string
      python-version:
        type: string
jobs:
    e2e_tests:
        runs-on: ${{ inputs.os }}

        # below condition checks if the operating system is Ubuntu, or 
        # if the operating system is Windows and the branch is main/demo
        if: >
          inputs.os == 'ubuntu-latest' || 
          (
            (
              github.ref == 'refs/heads/main' || 
              github.ref == 'refs/heads/demo'
            ) && 
            inputs.os == 'windows-latest'
          )
          
        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Clone latest kedro-starters release into package/starters and echo path
          run: |
            mkdir -p package/starters

            # Get latest release tag via GitHub API using auth to avoid rate limit
            LATEST_TAG=$(curl -s -H "Authorization: token ${{ secrets.GH_E2E_AUTH_TOKEN }}" \
              https://api.github.com/repos/kedro-org/kedro-starters/releases/latest \
              | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

            echo "📦 Latest release tag: $LATEST_TAG"

            # Clone that specific tag into package/starters
            git clone --branch "$LATEST_TAG" https://${{ secrets.GH_E2E_AUTH_TOKEN }}@github.com/kedro-org/kedro-starters.git package/starters

            echo "✅ Cloned into: $(pwd)/package/starters"
            echo "📂 Contents of package/starters:"
            ls -la package/starters

            echo "📂 Contents of package/starters/spaceflights-pandas:"
            ls -la package/starters/spaceflights-pandas || echo "❌ spaceflights-pandas folder not found!"


        - name: Setup Tests
          uses: "./.github/actions/setup_tests"
          with:
            os: ${{ inputs.os }}
            python-version: ${{ inputs.python-version }}
            
        - name: Run all end to end tests
          run: make e2e-tests 